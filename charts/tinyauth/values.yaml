# Default values for tinyauth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1 # @schema default: 1

image:
  repository: ghcr.io/steveiliop56/tinyauth # @schema default: "ghcr.io/steveiliop56/tinyauth"
  pullPolicy: IfNotPresent # @schema default: "IfNotPresent"
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # @schema default: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP # @schema default: "ClusterIP"
  port: 80 # @schema default: 80

# TinyAuth Configuration
tinyauth:
  # General Configuration
  general:
    port: 3000 # @schema default: 3000
    address: "0.0.0.0" # @schema default: "0.0.0.0"
    appUrl: "" # @schema default: ""; required: true
    users: "" # @schema default: ""; required: true
    usersFile: "" # @schema default: ""
    secureCookie: false # @schema default: false
    disableContinue: false # @schema default: false
    oauthWhitelist: "" # @schema default: ""
    sessionExpiry: 86400 # @schema default: 86400
    logLevel: info # @schema default: 1
    appTitle: "" # @schema default: ""
    loginMaxRetries: 5 # @schema default: 5
    loginTimeout: 300 # @schema default: 300
    forgotPasswordMessage: "" # @schema default: ""
    oauthAutoRedirect: "" # @schema default: ""
    backgroundImage: "" # @schema default: ""

  # OAuth Providers Configuration
  # Configure OAuth providers using dynamic IDs (e.g., GITHUB, GOOGLE, DISCORD)
  # Each provider generates environment variables in the format: PROVIDERS_[ID]_*
  # Example:
  #   providers:
  #     - id: github
  #       clientId: "your-github-client-id"
  #       clientSecret: "your-github-client-secret"
  #     - id: google
  #       clientId: "your-google-client-id"
  #       clientSecretSecretRef:
  #         name: google-oauth-secret
  #         key: client-secret
  #     - id: custom
  #       clientId: "your-custom-client-id"
  #       clientSecret: "your-custom-client-secret"
  #       authUrl: "https://example.com/oauth/authorize"
  #       tokenUrl: "https://example.com/oauth/token"
  #       userInfoUrl: "https://example.com/oauth/user"
  #       scopes: "openid profile email"
  #       name: "Custom OAuth"
  #       skipSsl: false
  providers: # @schema type:array; default:[]
    - id: "" # @schema type:string; default:""
      clientId: "" # @schema type:string; default:""
      clientSecret: "" # @schema type:string; default:""
      clientSecretFile: "" # @schema type:string; default:""
      clientSecretSecretRef: # @schema type:object
        name: "" # @schema type:string; default:""
        key: "" # @schema type:string; default:""
      authUrl: "" # @schema type:string; default:""
      tokenUrl: "" # @schema type:string; default:""
      userInfoUrl: "" # @schema type:string; default:""
      scopes: "" # @schema type:string; default:""
      name: "" # @schema type:string; default:""
      skipSsl: false # @schema type:boolean; default:false

  # LDAP Configuration
  ldap:
    enabled: false # @schema default: false
    address: "" # @schema default: ""
    bindDn: "" # @schema default: ""
    bindPassword: "" # @schema default: ""
    bindPasswordSecretRef:
      name: "" # @schema default: ""
      key: "" # @schema default: ""
    baseDn: "" # @schema default: ""
    insecure: false # @schema default: false
    searchFilter: "(uid=%s)" # @schema default: "(uid=%s)"

ingress:
  enabled: false # @schema default: false
  className: "" # @schema default: ""
  annotations: {} # @schema default: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: # @schema default: [{"host": "chart-example.local", "paths": [{"path": "/", "pathType": "ImplementationSpecific"}]}]
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [] # @schema default: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe: # @schema default: {"httpGet": {"path": "/api/healthz", "port": "http"}}
  httpGet:
    path: /api/healthz
    port: http
readinessProbe: # @schema default: {"httpGet": {"path": "/api/healthz", "port": "http"}}
  httpGet:
    path: /api/healthz
    port: http

autoscaling:
  enabled: false # @schema default: false
  minReplicas: 1 # @schema default: 1
  maxReplicas: 10 # @schema default: 10
  targetCPUUtilizationPercentage: 80 # @schema default: 80
  targetMemoryUtilizationPercentage: 80 # @schema default: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

httpRoute:
  enabled: false # @schema default: false
  annotations: {} # @schema default: {}
  parentRefs: # @schema default: [{"name": "my-gateway"}]
    - name: my-gateway
  hostnames: # @schema default: ["chart-example.local"]
    - chart-example.local
  rules: # @schema default: [{"matches": [{"path": {"type": "Prefix", "value": "/"}}]}]
    - matches:
        - path:
            type: Prefix
            value: /

# Additional environment variables for the container
env: [] # @schema default: []
# - name: CUSTOM_VAR
#   value: "custom_value"
# - name: SECRET_VAR
#   valueFrom:
#     secretKeyRef:
#       name: my-secret
#       key: secret-key

# Enable persistent storage for SQLite database
# When enabled a PersistentVolumeClaim will be created to persist the SQLite database
# this ensures session data is not lost
persistence:
  enabled: false # @schema default: false; description: Enable persistent storage for SQLite session database
  # existingClaim: "" # @schema default: ""; description: Use an existing PersistentVolumeClaim instead of creating a new one
  storageClass: "" # @schema default: ""; description: StorageClass for the PVC. If not set, the default StorageClass will be used
  accessMode: ReadWriteOnce # @schema default: "ReadWriteOnce"; description: Access mode for the PVC
  size: 1Gi # @schema default: "1Gi"; description: Size of the PVC for SQLite database storage
  mountPath: /data # @schema default: "/data"; description: Mount path for the persistent volume where SQLite database will be stored
  annotations: {} # @schema default: {}; description: Annotations to add to the PVC
